server {
   # server_name {};
    listen 80;
    listen  [::]:80;

    # 빌드된 프론트 데이터 매핑
    location / {
        root /usr/share/nginx/html; 
        index index.html index.htm; 
        try_files $uri  $uri/ /index.html; 
    }
    
    location /api {
        proxy_pass http://dd_be_app:8080; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    #return 301 https://$host$request_uri;   # http로 들어오면 https로 redirect 해주는 부분 
}

# server {
#   #  server_name {};
#     listen 443 ssl;
#     # client_max_body_size 20M;

#     # # Certificate
#     # ssl_certificate /etc/letsencrypt/live/{}/fullchain.pem;
#     # # Private Key
#     # ssl_certificate_key /etc/letsencrypt/live/{}/privkey.pem;
        
    #     # 빌드된 프론트 데이터 매핑
    # location / {
    #     root /usr/share/nginx/html; 
    #     index index.html index.htm; 
    #     try_files $uri  $uri/ /index.html; 
    # }

#     # location /api {
#     #     proxy_pass http://app:8080;
#     #     proxy_set_header Host $host;
#     #     proxy_set_header X-Real-IP $remote_addr;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto $scheme;
#     # }

    # 이하는 프론트 서버용 엔진엑스를 따로 구성하는 경우
    # 프리티어를 활용하므로 엔진엑스 하나로 처리해볼 예정
    # location / {
    #     proxy_pass http://mylog-f:3000; 
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
# }